<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-autowire="byName">

	<!-- 扫描service包下所有使用注解的类型 -->
	<context:component-scan
		base-package="com.shixzh.bcms.service" />

	<!-- 引入Dao配置 -->
	<import resource="classpath:spring/spring-dao.xml" />

 	<aop:config>
		<aop:advisor
			pointcut="com.shixzh.bcms.framework.aspect.SystemArchitecture.businessService()"
			advice-ref="txAdvice" />
	</aop:config>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="writeDataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="add*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="create*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="insert*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="merge*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="del*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="remove*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="proc*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="batch*" propagation="REQUIRED"
				rollback-for="java.lang.Exception,java.lang.RuntimeException"
				isolation="READ_COMMITTED" />
			<tx:method name="put*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="use*" read-only="true" />
			<tx:method name="get*" read-only="true" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<!-- <tx:method name="get*" read-only="true" propagation="REQUIRED" isolation="READ_UNCOMMITTED" /> -->
			<tx:method name="count*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<!-- 在某个范围查找中，插入新的符合条件的行，测试幻读现象，结果：在事务存在的情况下，REPEATABLE_READ级别同样可以避免幻读，具有范围锁 -->
			<!-- <tx:method name="list*" read-only="true" propagation="REQUIRED" isolation="SERIALIZABLE" /> 共享一个事务，序列化，始终一致-->
			<!-- <tx:method name="list*" read-only="true" propagation="NOT_SUPPORTED" isolation="SERIALIZABLE" /> 非事务，序列化，出现不一致-->
			<!-- <tx:method name="list*" read-only="true" propagation="REQUIRED" isolation="REPEATABLE_READ" /> 共享一个事务，可重复读，始终一致（异常）-->
			<!-- <tx:method name="list*" read-only="true" propagation="REQUIRES_NEW" isolation="REPEATABLE_READ" /> 两个事务，可重复读，始终一致-->
			<!-- <tx:method name="list*" read-only="true" propagation="NESTED" isolation="REPEATABLE_READ" /> 嵌套事务，可重复读，始终一致-->
			<!-- <tx:method name="list*" read-only="true" propagation="SUPPORTS" isolation="REPEATABLE_READ" /> 非事务，可重复读，出现不一致-->
			<!-- <tx:method name="list*" read-only="true" propagation="NOT_SUPPORTED" isolation="REPEATABLE_READ" /> 非事务，可重复读，出现不一致-->
			<!-- <tx:method name="list*" read-only="true" propagation="NEVER" isolation="REPEATABLE_READ" /> 非事务，可重复读，出现不一致-->
			<!-- <tx:method name="list*" read-only="true" propagation="MANDATORY" isolation="REPEATABLE_READ" /> 非事务，抛异常-->
			<!-- <tx:method name="list*" read-only="true" propagation="REQUIRED" isolation="READ_COMMITTED" /> 共享一个事务，读取已提交，出现不一致-->
			<!-- <tx:method name="list*" read-only="true" propagation="NOT_SUPPORTED" isolation="READ_COMMITTED" /> 非事务，读取已提交，出现不一致-->
			<!-- <tx:method name="list*" read-only="true" propagation="REQUIRED" isolation="DEFAULT" /> 共享一个事务，数据库默认（可重复读），始终一致-->
			<!-- <tx:method name="list*" read-only="true" isolation="DEFAULT" /> 默认REQUIRED，数据库默认（可重复读），始终一致-->
			<tx:method name="list*" read-only="true" />
			<tx:method name="select*" read-only="true" />

			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

</beans>