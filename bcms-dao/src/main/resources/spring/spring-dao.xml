<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd"
        >
    <!-- 配置整合mybatis过程-->

    <!-- 2: 数据库连接池 -->
    <!-- 读写数据源-->
    <bean id="writeDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/bcms?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false"/>
        <property name="user" value="root"/>
        <property name="password" value="root"/>

        <!-- c3p0 连接池的私有属性 -->
        <!-- 指定连接数据库连接池的最小连接数 -->
        <property name="minPoolSize" value="20" />
        <!-- 指定连接数据库连接池的最大连接数 -->
        <property name="maxPoolSize" value="200" />
        <!-- 指定连接数据库连接池的初始化连接数 -->
        <property name="initialPoolSize" value="20" />
        <!-- 指定连接数据库连接池的连接的最大空闲时间 -->
        <property name="maxIdleTime" value="600" />
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="10" />

        <!-- 定义在从数据库获取新连接失败后重复尝试获取的次数，默认为30 -->
        <property name="acquireRetryAttempts" value="3" />
        <!-- 两次连接中间隔时间，单位毫秒，默认为1000 -->
        <property name="acquireRetryDelay" value="1000" />
        <!-- 如果设为true那么在取得连接的同时将校验连接的有效性。默认为false -->
        <property name="testConnectionOnCheckin" value="true" />
        <!-- 隔多少秒检查所有连接池中的空闲连接，默认为0表示不检查 -->
        <property name="idleConnectionTestPeriod" value="30" />
        <!--当连接池连接耗尽时，客户端获取连接等待所需时间-->
        <property name="checkoutTimeout" value="20000"/>
    </bean>

    <!-- 3: 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="writeDataSource"/>
        <!-- 配置MyBatis全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描DO包，使用别名-->
        <property name="typeAliasesPackage" value="com.shixzh.bcms.po"/>
        <!-- 扫描sql配置文件：mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 4: 配置扫描DAO接口包，动态实现DAO接口，并注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描DAO接口包 -->
        <property name="basePackage" value="com.shixzh.bcms.dao"/>
    </bean>
</beans>